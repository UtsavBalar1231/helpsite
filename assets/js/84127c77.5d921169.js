"use strict";(self.webpackChunksemester_6_help=self.webpackChunksemester_6_help||[]).push([[5098],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,g=m["".concat(u,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3656:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:1,slug:"/rust-unit3"},u=void 0,s={unversionedId:"Syllabus-Theory/Modern-Programming-Technologies/rust/rust-unit3",id:"Syllabus-Theory/Modern-Programming-Technologies/rust/rust-unit3",title:"rust-unit3",description:"Rust",source:"@site/docs/Syllabus-Theory/Modern-Programming-Technologies/rust/rust-unit3.md",sourceDirName:"Syllabus-Theory/Modern-Programming-Technologies/rust",slug:"/rust-unit3",permalink:"/docs/rust-unit3",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Syllabus-Theory/Modern-Programming-Technologies/rust/rust-unit3.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/rust-unit3"},sidebar:"tutorialSidebar",previous:{title:"rust-unit2",permalink:"/docs/rust-unit2"},next:{title:"go-unit4",permalink:"/docs/go-unit4"}},p=[{value:"Rust: ENUMS and Pattern Matching:",id:"rust-enums-and-pattern-matching",children:[],level:2},{value:"Rust: Managing Growing Projects with Packages Crats and",id:"rust-managing-growing-projects-with-packages-crats-and",children:[],level:2}],c={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"rust-enums-and-pattern-matching"},"Rust: ENUMS and Pattern Matching:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Defining an Enum:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Enum values"),(0,i.kt)("li",{parentName:"ul"},"The option enum and its advantages over null values"))),(0,i.kt)("li",{parentName:"ul"},"The match control flow operator:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Patterns that bind to values"),(0,i.kt)("li",{parentName:"ul"},"Matching with option ",(0,i.kt)("inlineCode",{parentName:"li"},"<T>")),(0,i.kt)("li",{parentName:"ul"},"Matches are exhaustive"),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"_")," placeholder"))),(0,i.kt)("li",{parentName:"ul"},"Concise control flow with if let.")),(0,i.kt)("h2",{id:"rust-managing-growing-projects-with-packages-crats-and"},"Rust: Managing Growing Projects with Packages Crats and"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modules:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Packages and crates"),(0,i.kt)("li",{parentName:"ul"},"Defining modules to control scope and privacy"),(0,i.kt)("li",{parentName:"ul"},"Paths for referring to an item in the module tree",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Exposing paths with the pub keyword"),(0,i.kt)("li",{parentName:"ul"},"Starting relative paths with super"))))),(0,i.kt)("li",{parentName:"ul"},"Making structs and enum public"),(0,i.kt)("li",{parentName:"ul"},"Bringing paths into scope with the ",(0,i.kt)("inlineCode",{parentName:"li"},"use")," keyword:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Creating idiomatic ",(0,i.kt)("inlineCode",{parentName:"li"},"use")," paths"))),(0,i.kt)("li",{parentName:"ul"},"Providing ",(0,i.kt)("inlineCode",{parentName:"li"},"new")),(0,i.kt)("li",{parentName:"ul"},"Names with the ",(0,i.kt)("inlineCode",{parentName:"li"},"as")," keyword"),(0,i.kt)("li",{parentName:"ul"},"Re-exporting names with ",(0,i.kt)("inlineCode",{parentName:"li"},"pub")," use"),(0,i.kt)("li",{parentName:"ul"},"Using external packages"),(0,i.kt)("li",{parentName:"ul"},"Using nested paths to clean up large use lists"),(0,i.kt)("li",{parentName:"ul"},"The glob operator"),(0,i.kt)("li",{parentName:"ul"},"Separating modules into different files.")))}m.isMDXComponent=!0}}]);